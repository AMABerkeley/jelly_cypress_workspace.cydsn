ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 0A00     		.ascii	"\012\000"
  23              		.section	.text.main,"ax",%progbits
  24              		.align	2
  25              		.global	main
  26              		.thumb
  27              		.thumb_func
  28              		.type	main, %function
  29              	main:
  30              	.LFB63:
  31              		.file 1 "main.c"
   1:main.c        **** /******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.10
   5:main.c        **** *
   6:main.c        **** * Description: This is the source code for the Blinking LED code example.
   7:main.c        **** *
   8:main.c        **** * Related Document: CE195352_PSoC_5LP_Blinking_LED.pdf
   9:main.c        **** *
  10:main.c        **** * Hardware Dependency: See CE195352_PSoC_5LP_Blinking_LED.pdf
  11:main.c        **** *
  12:main.c        **** *******************************************************************************
  13:main.c        **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  14:main.c        **** *******************************************************************************
  15:main.c        **** * This software, including source code, documentation and related materials
  16:main.c        **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  17:main.c        **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  18:main.c        **** * protection (United States and foreign), United States copyright laws and
  19:main.c        **** * international treaty provisions. Therefore, you may use this Software only
  20:main.c        **** * as provided in the license agreement accompanying the software package from
  21:main.c        **** * which you obtained this Software (“EULA”).
  22:main.c        **** *
  23:main.c        **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  24:main.c        **** * non-transferable license to copy, modify, and compile the Software source
  25:main.c        **** * code solely for use in connection with Cypress’s integrated circuit products.
  26:main.c        **** * Any reproduction, modification, translation, compilation, or representation
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 2


  27:main.c        **** * of this Software except as specified above is prohibited without the express
  28:main.c        **** * written permission of Cypress.
  29:main.c        **** *
  30:main.c        **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  31:main.c        **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  32:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  33:main.c        **** * reserves the right to make changes to the Software without notice. Cypress 
  34:main.c        **** * does not assume any liability arising out of the application or use of the 
  35:main.c        **** * Software or any product or circuit described in the Software. Cypress does 
  36:main.c        **** * not authorize its products for use in any products where a malfunction or 
  37:main.c        **** * failure of the Cypress product may reasonably be expected to result in 
  38:main.c        **** * significant property damage, injury or death (“High Risk Product”). By 
  39:main.c        **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  40:main.c        **** * system or application assumes all risk of such use and in doing so agrees to 
  41:main.c        **** * indemnify Cypress against all liability.
  42:main.c        **** *******************************************************************************/
  43:main.c        **** 
  44:main.c        **** #include <project.h>
  45:main.c        **** #include <stdlib.h>
  46:main.c        **** 
  47:main.c        **** /*******************************************************************************
  48:main.c        **** * Function Name: main
  49:main.c        **** ********************************************************************************
  50:main.c        **** *
  51:main.c        **** * Summary:
  52:main.c        **** *  The PWM is configured and started in the PWM_1_Start() function.
  53:main.c        **** *  The firmware then enters an idle loop, leaving control of the project
  54:main.c        **** *  to the fixed function PWM peripheral.
  55:main.c        **** *
  56:main.c        **** * Parameters:
  57:main.c        **** *  None.
  58:main.c        **** *
  59:main.c        **** * Return:
  60:main.c        **** *  None.
  61:main.c        **** *
  62:main.c        **** *******************************************************************************/
  63:main.c        **** 
  64:main.c        **** int main()
  65:main.c        **** {
  32              		.loc 1 65 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 528
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 ADF5047D 		sub	sp, sp, #528
  41              		.cfi_def_cfa_offset 536
  42 0006 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  66:main.c        ****     CyDelay(1000);
  44              		.loc 1 66 0
  45 0008 4FF47A70 		mov	r0, #1000
  46 000c FFF7FEFF 		bl	CyDelay
  67:main.c        ****     
  68:main.c        ****     /* Serial */
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 3


  69:main.c        ****     CyGlobalIntEnable;
  47              		.loc 1 69 0
  48              		.syntax unified
  49              	@ 69 "main.c" 1
  50 0010 62B6     		CPSIE   i
  51              	@ 0 "" 2
  70:main.c        ****     UART_Start();
  52              		.loc 1 70 0
  53              		.thumb
  54              		.syntax unified
  55 0012 FFF7FEFF 		bl	UART_Start
  71:main.c        ****     int ch; 
  72:main.c        ****     char buffer[512];
  73:main.c        ****     uint16_t buffer_count = 0;
  56              		.loc 1 73 0
  57 0016 0023     		movs	r3, #0
  58 0018 A7F80E32 		strh	r3, [r7, #526]	@ movhi
  74:main.c        ****     
  75:main.c        ****     /* PWM */
  76:main.c        ****     PWM_Start();    
  59              		.loc 1 76 0
  60 001c FFF7FEFF 		bl	PWM_Start
  77:main.c        ****     int cmp = 9000; // cmp is between 8640 and 9120, 90%-95% of 9600.
  61              		.loc 1 77 0
  62 0020 42F22833 		movw	r3, #9000
  63 0024 C7F80832 		str	r3, [r7, #520]
  78:main.c        ****     int mltplr = 1;
  64              		.loc 1 78 0
  65 0028 0123     		movs	r3, #1
  66 002a C7F80432 		str	r3, [r7, #516]
  67              	.L5:
  79:main.c        ****     
  80:main.c        ****     while (1) {
  81:main.c        ****         ch = UART_GetChar(); // returns an int apparently
  68              		.loc 1 81 0
  69 002e FFF7FEFF 		bl	UART_GetChar
  70 0032 0346     		mov	r3, r0
  71 0034 C7F80032 		str	r3, [r7, #512]
  82:main.c        ****         
  83:main.c        ****         if (ch > 0) 
  72              		.loc 1 83 0
  73 0038 D7F80032 		ldr	r3, [r7, #512]
  74 003c 002B     		cmp	r3, #0
  75 003e F6DD     		ble	.L5
  84:main.c        ****         { 
  85:main.c        ****             if (ch == 13) { // if new line pressed
  76              		.loc 1 85 0
  77 0040 D7F80032 		ldr	r3, [r7, #512]
  78 0044 0D2B     		cmp	r3, #13
  79 0046 2BD1     		bne	.L3
  86:main.c        ****                 // Null terminate
  87:main.c        ****                 buffer[buffer_count++] = '\0';
  80              		.loc 1 87 0
  81 0048 B7F80E32 		ldrh	r3, [r7, #526]
  82 004c 5A1C     		adds	r2, r3, #1
  83 004e A7F80E22 		strh	r2, [r7, #526]	@ movhi
  84 0052 1A46     		mov	r2, r3
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 4


  85 0054 3B46     		mov	r3, r7
  86 0056 0021     		movs	r1, #0
  87 0058 9954     		strb	r1, [r3, r2]
  88:main.c        **** 
  89:main.c        ****                 // Print back what was typed
  90:main.c        ****                 UART_PutString(buffer);
  88              		.loc 1 90 0
  89 005a 3B46     		mov	r3, r7
  90 005c 1846     		mov	r0, r3
  91 005e FFF7FEFF 		bl	UART_PutString
  91:main.c        ****                 UART_PutStringConst("\n");
  92              		.loc 1 91 0
  93 0062 1C48     		ldr	r0, .L6
  94 0064 FFF7FEFF 		bl	UART_PutString
  92:main.c        **** 
  93:main.c        ****                 // Parse int from buffer
  94:main.c        ****                 cmp = atoi(buffer);
  95              		.loc 1 94 0
  96 0068 3B46     		mov	r3, r7
  97 006a 1846     		mov	r0, r3
  98 006c FFF7FEFF 		bl	atoi
  99 0070 C7F80802 		str	r0, [r7, #520]
  95:main.c        ****                 
  96:main.c        ****                 // Spin motor:
  97:main.c        ****                 if (cmp < 9250 && cmp > 8700) { // Manually tested range.
 100              		.loc 1 97 0
 101 0074 D7F80832 		ldr	r3, [r7, #520]
 102 0078 42F22142 		movw	r2, #9249
 103 007c 9342     		cmp	r3, r2
 104 007e 0BDC     		bgt	.L4
 105              		.loc 1 97 0 is_stmt 0 discriminator 1
 106 0080 D7F80832 		ldr	r3, [r7, #520]
 107 0084 42F2FC12 		movw	r2, #8700
 108 0088 9342     		cmp	r3, r2
 109 008a 05DD     		ble	.L4
  98:main.c        ****                     PWM_WriteCompare(cmp); // This is real time!!    
 110              		.loc 1 98 0 is_stmt 1
 111 008c D7F80832 		ldr	r3, [r7, #520]
 112 0090 9BB2     		uxth	r3, r3
 113 0092 1846     		mov	r0, r3
 114 0094 FFF7FEFF 		bl	PWM_WriteCompare
 115              	.L4:
  99:main.c        ****                 }
 100:main.c        ****                 
 101:main.c        **** 
 102:main.c        ****                 // Reset buffer
 103:main.c        ****                 buffer_count = 0;
 116              		.loc 1 103 0
 117 0098 0023     		movs	r3, #0
 118 009a A7F80E32 		strh	r3, [r7, #526]	@ movhi
 119 009e C6E7     		b	.L5
 120              	.L3:
 104:main.c        ****             }
 105:main.c        ****             else if (ch >= 48 && ch <= 57 && buffer_count < sizeof(buffer) / sizeof(buffer[0]) - 1)
 121              		.loc 1 105 0
 122 00a0 D7F80032 		ldr	r3, [r7, #512]
 123 00a4 2F2B     		cmp	r3, #47
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 5


 124 00a6 C2DD     		ble	.L5
 125              		.loc 1 105 0 is_stmt 0 discriminator 1
 126 00a8 D7F80032 		ldr	r3, [r7, #512]
 127 00ac 392B     		cmp	r3, #57
 128 00ae BEDC     		bgt	.L5
 129              		.loc 1 105 0 discriminator 2
 130 00b0 B7F80E32 		ldrh	r3, [r7, #526]
 131 00b4 B3F5FF7F 		cmp	r3, #510
 132 00b8 B9D8     		bhi	.L5
 106:main.c        ****                 // Put character into buffer
 107:main.c        ****                 buffer[buffer_count++] = ch;
 133              		.loc 1 107 0 is_stmt 1
 134 00ba B7F80E32 		ldrh	r3, [r7, #526]
 135 00be 5A1C     		adds	r2, r3, #1
 136 00c0 A7F80E22 		strh	r2, [r7, #526]	@ movhi
 137 00c4 1A46     		mov	r2, r3
 138 00c6 D7F80032 		ldr	r3, [r7, #512]
 139 00ca D9B2     		uxtb	r1, r3
 140 00cc 3B46     		mov	r3, r7
 141 00ce 9954     		strb	r1, [r3, r2]
 108:main.c        ****             }
 109:main.c        ****         }
 110:main.c        ****     }
 142              		.loc 1 110 0
 143 00d0 ADE7     		b	.L5
 144              	.L7:
 145 00d2 00BF     		.align	2
 146              	.L6:
 147 00d4 00000000 		.word	.LC0
 148              		.cfi_endproc
 149              	.LFE63:
 150              		.size	main, .-main
 151              		.text
 152              	.Letext0:
 153              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 154              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 155              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 156              		.section	.debug_info,"",%progbits
 157              	.Ldebug_info0:
 158 0000 39010000 		.4byte	0x139
 159 0004 0400     		.2byte	0x4
 160 0006 00000000 		.4byte	.Ldebug_abbrev0
 161 000a 04       		.byte	0x4
 162 000b 01       		.uleb128 0x1
 163 000c 99000000 		.4byte	.LASF21
 164 0010 0C       		.byte	0xc
 165 0011 2E000000 		.4byte	.LASF22
 166 0015 66000000 		.4byte	.LASF23
 167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 168 001d 00000000 		.4byte	0
 169 0021 00000000 		.4byte	.Ldebug_line0
 170 0025 02       		.uleb128 0x2
 171 0026 01       		.byte	0x1
 172 0027 06       		.byte	0x6
 173 0028 70010000 		.4byte	.LASF0
 174 002c 02       		.uleb128 0x2
 175 002d 01       		.byte	0x1
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 6


 176 002e 08       		.byte	0x8
 177 002f 27010000 		.4byte	.LASF1
 178 0033 02       		.uleb128 0x2
 179 0034 02       		.byte	0x2
 180 0035 05       		.byte	0x5
 181 0036 A1010000 		.4byte	.LASF2
 182 003a 03       		.uleb128 0x3
 183 003b AB010000 		.4byte	.LASF4
 184 003f 02       		.byte	0x2
 185 0040 2B       		.byte	0x2b
 186 0041 45000000 		.4byte	0x45
 187 0045 02       		.uleb128 0x2
 188 0046 02       		.byte	0x2
 189 0047 07       		.byte	0x7
 190 0048 0E000000 		.4byte	.LASF3
 191 004c 03       		.uleb128 0x3
 192 004d 88010000 		.4byte	.LASF5
 193 0051 02       		.byte	0x2
 194 0052 3F       		.byte	0x3f
 195 0053 57000000 		.4byte	0x57
 196 0057 02       		.uleb128 0x2
 197 0058 04       		.byte	0x4
 198 0059 05       		.byte	0x5
 199 005a 3A010000 		.4byte	.LASF6
 200 005e 02       		.uleb128 0x2
 201 005f 04       		.byte	0x4
 202 0060 07       		.byte	0x7
 203 0061 43010000 		.4byte	.LASF7
 204 0065 02       		.uleb128 0x2
 205 0066 08       		.byte	0x8
 206 0067 05       		.byte	0x5
 207 0068 00000000 		.4byte	.LASF8
 208 006c 02       		.uleb128 0x2
 209 006d 08       		.byte	0x8
 210 006e 07       		.byte	0x7
 211 006f 4F000000 		.4byte	.LASF9
 212 0073 04       		.uleb128 0x4
 213 0074 04       		.byte	0x4
 214 0075 05       		.byte	0x5
 215 0076 696E7400 		.ascii	"int\000"
 216 007a 02       		.uleb128 0x2
 217 007b 04       		.byte	0x4
 218 007c 07       		.byte	0x7
 219 007d 21000000 		.4byte	.LASF10
 220 0081 03       		.uleb128 0x3
 221 0082 92010000 		.4byte	.LASF11
 222 0086 03       		.byte	0x3
 223 0087 24       		.byte	0x24
 224 0088 3A000000 		.4byte	0x3a
 225 008c 03       		.uleb128 0x3
 226 008d 3A000000 		.4byte	.LASF12
 227 0091 03       		.byte	0x3
 228 0092 2C       		.byte	0x2c
 229 0093 4C000000 		.4byte	0x4c
 230 0097 02       		.uleb128 0x2
 231 0098 04       		.byte	0x4
 232 0099 04       		.byte	0x4
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 7


 233 009a 9B010000 		.4byte	.LASF13
 234 009e 02       		.uleb128 0x2
 235 009f 08       		.byte	0x8
 236 00a0 04       		.byte	0x4
 237 00a1 55010000 		.4byte	.LASF14
 238 00a5 02       		.uleb128 0x2
 239 00a6 01       		.byte	0x1
 240 00a7 08       		.byte	0x8
 241 00a8 35010000 		.4byte	.LASF15
 242 00ac 02       		.uleb128 0x2
 243 00ad 08       		.byte	0x8
 244 00ae 04       		.byte	0x4
 245 00af 7C010000 		.4byte	.LASF16
 246 00b3 02       		.uleb128 0x2
 247 00b4 04       		.byte	0x4
 248 00b5 07       		.byte	0x7
 249 00b6 BD010000 		.4byte	.LASF17
 250 00ba 05       		.uleb128 0x5
 251 00bb 35000000 		.4byte	.LASF24
 252 00bf 01       		.byte	0x1
 253 00c0 40       		.byte	0x40
 254 00c1 73000000 		.4byte	0x73
 255 00c5 00000000 		.4byte	.LFB63
 256 00c9 D8000000 		.4byte	.LFE63-.LFB63
 257 00cd 01       		.uleb128 0x1
 258 00ce 9C       		.byte	0x9c
 259 00cf 1A010000 		.4byte	0x11a
 260 00d3 06       		.uleb128 0x6
 261 00d4 636800   		.ascii	"ch\000"
 262 00d7 01       		.byte	0x1
 263 00d8 47       		.byte	0x47
 264 00d9 73000000 		.4byte	0x73
 265 00dd 02       		.uleb128 0x2
 266 00de 91       		.byte	0x91
 267 00df 68       		.sleb128 -24
 268 00e0 07       		.uleb128 0x7
 269 00e1 B6010000 		.4byte	.LASF18
 270 00e5 01       		.byte	0x1
 271 00e6 48       		.byte	0x48
 272 00e7 1A010000 		.4byte	0x11a
 273 00eb 03       		.uleb128 0x3
 274 00ec 91       		.byte	0x91
 275 00ed E87B     		.sleb128 -536
 276 00ef 07       		.uleb128 0x7
 277 00f0 42000000 		.4byte	.LASF19
 278 00f4 01       		.byte	0x1
 279 00f5 49       		.byte	0x49
 280 00f6 81000000 		.4byte	0x81
 281 00fa 02       		.uleb128 0x2
 282 00fb 91       		.byte	0x91
 283 00fc 76       		.sleb128 -10
 284 00fd 06       		.uleb128 0x6
 285 00fe 636D7000 		.ascii	"cmp\000"
 286 0102 01       		.byte	0x1
 287 0103 4D       		.byte	0x4d
 288 0104 73000000 		.4byte	0x73
 289 0108 02       		.uleb128 0x2
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 8


 290 0109 91       		.byte	0x91
 291 010a 70       		.sleb128 -16
 292 010b 07       		.uleb128 0x7
 293 010c 5C010000 		.4byte	.LASF20
 294 0110 01       		.byte	0x1
 295 0111 4E       		.byte	0x4e
 296 0112 73000000 		.4byte	0x73
 297 0116 02       		.uleb128 0x2
 298 0117 91       		.byte	0x91
 299 0118 6C       		.sleb128 -20
 300 0119 00       		.byte	0
 301 011a 08       		.uleb128 0x8
 302 011b A5000000 		.4byte	0xa5
 303 011f 2B010000 		.4byte	0x12b
 304 0123 09       		.uleb128 0x9
 305 0124 B3000000 		.4byte	0xb3
 306 0128 FF01     		.2byte	0x1ff
 307 012a 00       		.byte	0
 308 012b 0A       		.uleb128 0xa
 309 012c 63010000 		.4byte	.LASF25
 310 0130 04       		.byte	0x4
 311 0131 1207     		.2byte	0x712
 312 0133 37010000 		.4byte	0x137
 313 0137 0B       		.uleb128 0xb
 314 0138 8C000000 		.4byte	0x8c
 315 013c 00       		.byte	0
 316              		.section	.debug_abbrev,"",%progbits
 317              	.Ldebug_abbrev0:
 318 0000 01       		.uleb128 0x1
 319 0001 11       		.uleb128 0x11
 320 0002 01       		.byte	0x1
 321 0003 25       		.uleb128 0x25
 322 0004 0E       		.uleb128 0xe
 323 0005 13       		.uleb128 0x13
 324 0006 0B       		.uleb128 0xb
 325 0007 03       		.uleb128 0x3
 326 0008 0E       		.uleb128 0xe
 327 0009 1B       		.uleb128 0x1b
 328 000a 0E       		.uleb128 0xe
 329 000b 55       		.uleb128 0x55
 330 000c 17       		.uleb128 0x17
 331 000d 11       		.uleb128 0x11
 332 000e 01       		.uleb128 0x1
 333 000f 10       		.uleb128 0x10
 334 0010 17       		.uleb128 0x17
 335 0011 00       		.byte	0
 336 0012 00       		.byte	0
 337 0013 02       		.uleb128 0x2
 338 0014 24       		.uleb128 0x24
 339 0015 00       		.byte	0
 340 0016 0B       		.uleb128 0xb
 341 0017 0B       		.uleb128 0xb
 342 0018 3E       		.uleb128 0x3e
 343 0019 0B       		.uleb128 0xb
 344 001a 03       		.uleb128 0x3
 345 001b 0E       		.uleb128 0xe
 346 001c 00       		.byte	0
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 9


 347 001d 00       		.byte	0
 348 001e 03       		.uleb128 0x3
 349 001f 16       		.uleb128 0x16
 350 0020 00       		.byte	0
 351 0021 03       		.uleb128 0x3
 352 0022 0E       		.uleb128 0xe
 353 0023 3A       		.uleb128 0x3a
 354 0024 0B       		.uleb128 0xb
 355 0025 3B       		.uleb128 0x3b
 356 0026 0B       		.uleb128 0xb
 357 0027 49       		.uleb128 0x49
 358 0028 13       		.uleb128 0x13
 359 0029 00       		.byte	0
 360 002a 00       		.byte	0
 361 002b 04       		.uleb128 0x4
 362 002c 24       		.uleb128 0x24
 363 002d 00       		.byte	0
 364 002e 0B       		.uleb128 0xb
 365 002f 0B       		.uleb128 0xb
 366 0030 3E       		.uleb128 0x3e
 367 0031 0B       		.uleb128 0xb
 368 0032 03       		.uleb128 0x3
 369 0033 08       		.uleb128 0x8
 370 0034 00       		.byte	0
 371 0035 00       		.byte	0
 372 0036 05       		.uleb128 0x5
 373 0037 2E       		.uleb128 0x2e
 374 0038 01       		.byte	0x1
 375 0039 3F       		.uleb128 0x3f
 376 003a 19       		.uleb128 0x19
 377 003b 03       		.uleb128 0x3
 378 003c 0E       		.uleb128 0xe
 379 003d 3A       		.uleb128 0x3a
 380 003e 0B       		.uleb128 0xb
 381 003f 3B       		.uleb128 0x3b
 382 0040 0B       		.uleb128 0xb
 383 0041 49       		.uleb128 0x49
 384 0042 13       		.uleb128 0x13
 385 0043 11       		.uleb128 0x11
 386 0044 01       		.uleb128 0x1
 387 0045 12       		.uleb128 0x12
 388 0046 06       		.uleb128 0x6
 389 0047 40       		.uleb128 0x40
 390 0048 18       		.uleb128 0x18
 391 0049 9642     		.uleb128 0x2116
 392 004b 19       		.uleb128 0x19
 393 004c 01       		.uleb128 0x1
 394 004d 13       		.uleb128 0x13
 395 004e 00       		.byte	0
 396 004f 00       		.byte	0
 397 0050 06       		.uleb128 0x6
 398 0051 34       		.uleb128 0x34
 399 0052 00       		.byte	0
 400 0053 03       		.uleb128 0x3
 401 0054 08       		.uleb128 0x8
 402 0055 3A       		.uleb128 0x3a
 403 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 10


 404 0057 3B       		.uleb128 0x3b
 405 0058 0B       		.uleb128 0xb
 406 0059 49       		.uleb128 0x49
 407 005a 13       		.uleb128 0x13
 408 005b 02       		.uleb128 0x2
 409 005c 18       		.uleb128 0x18
 410 005d 00       		.byte	0
 411 005e 00       		.byte	0
 412 005f 07       		.uleb128 0x7
 413 0060 34       		.uleb128 0x34
 414 0061 00       		.byte	0
 415 0062 03       		.uleb128 0x3
 416 0063 0E       		.uleb128 0xe
 417 0064 3A       		.uleb128 0x3a
 418 0065 0B       		.uleb128 0xb
 419 0066 3B       		.uleb128 0x3b
 420 0067 0B       		.uleb128 0xb
 421 0068 49       		.uleb128 0x49
 422 0069 13       		.uleb128 0x13
 423 006a 02       		.uleb128 0x2
 424 006b 18       		.uleb128 0x18
 425 006c 00       		.byte	0
 426 006d 00       		.byte	0
 427 006e 08       		.uleb128 0x8
 428 006f 01       		.uleb128 0x1
 429 0070 01       		.byte	0x1
 430 0071 49       		.uleb128 0x49
 431 0072 13       		.uleb128 0x13
 432 0073 01       		.uleb128 0x1
 433 0074 13       		.uleb128 0x13
 434 0075 00       		.byte	0
 435 0076 00       		.byte	0
 436 0077 09       		.uleb128 0x9
 437 0078 21       		.uleb128 0x21
 438 0079 00       		.byte	0
 439 007a 49       		.uleb128 0x49
 440 007b 13       		.uleb128 0x13
 441 007c 2F       		.uleb128 0x2f
 442 007d 05       		.uleb128 0x5
 443 007e 00       		.byte	0
 444 007f 00       		.byte	0
 445 0080 0A       		.uleb128 0xa
 446 0081 34       		.uleb128 0x34
 447 0082 00       		.byte	0
 448 0083 03       		.uleb128 0x3
 449 0084 0E       		.uleb128 0xe
 450 0085 3A       		.uleb128 0x3a
 451 0086 0B       		.uleb128 0xb
 452 0087 3B       		.uleb128 0x3b
 453 0088 05       		.uleb128 0x5
 454 0089 49       		.uleb128 0x49
 455 008a 13       		.uleb128 0x13
 456 008b 3F       		.uleb128 0x3f
 457 008c 19       		.uleb128 0x19
 458 008d 3C       		.uleb128 0x3c
 459 008e 19       		.uleb128 0x19
 460 008f 00       		.byte	0
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 11


 461 0090 00       		.byte	0
 462 0091 0B       		.uleb128 0xb
 463 0092 35       		.uleb128 0x35
 464 0093 00       		.byte	0
 465 0094 49       		.uleb128 0x49
 466 0095 13       		.uleb128 0x13
 467 0096 00       		.byte	0
 468 0097 00       		.byte	0
 469 0098 00       		.byte	0
 470              		.section	.debug_aranges,"",%progbits
 471 0000 1C000000 		.4byte	0x1c
 472 0004 0200     		.2byte	0x2
 473 0006 00000000 		.4byte	.Ldebug_info0
 474 000a 04       		.byte	0x4
 475 000b 00       		.byte	0
 476 000c 0000     		.2byte	0
 477 000e 0000     		.2byte	0
 478 0010 00000000 		.4byte	.LFB63
 479 0014 D8000000 		.4byte	.LFE63-.LFB63
 480 0018 00000000 		.4byte	0
 481 001c 00000000 		.4byte	0
 482              		.section	.debug_ranges,"",%progbits
 483              	.Ldebug_ranges0:
 484 0000 00000000 		.4byte	.LFB63
 485 0004 D8000000 		.4byte	.LFE63
 486 0008 00000000 		.4byte	0
 487 000c 00000000 		.4byte	0
 488              		.section	.debug_line,"",%progbits
 489              	.Ldebug_line0:
 490 0000 7C010000 		.section	.debug_str,"MS",%progbits,1
 490      02003F01 
 490      00000201 
 490      FB0E0D00 
 490      01010101 
 491              	.LASF8:
 492 0000 6C6F6E67 		.ascii	"long long int\000"
 492      206C6F6E 
 492      6720696E 
 492      7400
 493              	.LASF3:
 494 000e 73686F72 		.ascii	"short unsigned int\000"
 494      7420756E 
 494      7369676E 
 494      65642069 
 494      6E7400
 495              	.LASF10:
 496 0021 756E7369 		.ascii	"unsigned int\000"
 496      676E6564 
 496      20696E74 
 496      00
 497              	.LASF22:
 498 002e 6D61696E 		.ascii	"main.c\000"
 498      2E6300
 499              	.LASF24:
 500 0035 6D61696E 		.ascii	"main\000"
 500      00
 501              	.LASF12:
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 12


 502 003a 696E7433 		.ascii	"int32_t\000"
 502      325F7400 
 503              	.LASF19:
 504 0042 62756666 		.ascii	"buffer_count\000"
 504      65725F63 
 504      6F756E74 
 504      00
 505              	.LASF9:
 506 004f 6C6F6E67 		.ascii	"long long unsigned int\000"
 506      206C6F6E 
 506      6720756E 
 506      7369676E 
 506      65642069 
 507              	.LASF23:
 508 0066 433A5C73 		.ascii	"C:\\school\\me135\\PSOC\\jelly_cypress_workspace.cy"
 508      63686F6F 
 508      6C5C6D65 
 508      3133355C 
 508      50534F43 
 509 0095 64736E00 		.ascii	"dsn\000"
 510              	.LASF21:
 511 0099 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 511      43313120 
 511      352E342E 
 511      31203230 
 511      31363036 
 512 00cc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 512      20726576 
 512      6973696F 
 512      6E203233 
 512      37373135 
 513 00ff 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 513      66756E63 
 513      74696F6E 
 513      2D736563 
 513      74696F6E 
 514              	.LASF1:
 515 0127 756E7369 		.ascii	"unsigned char\000"
 515      676E6564 
 515      20636861 
 515      7200
 516              	.LASF15:
 517 0135 63686172 		.ascii	"char\000"
 517      00
 518              	.LASF6:
 519 013a 6C6F6E67 		.ascii	"long int\000"
 519      20696E74 
 519      00
 520              	.LASF7:
 521 0143 6C6F6E67 		.ascii	"long unsigned int\000"
 521      20756E73 
 521      69676E65 
 521      6420696E 
 521      7400
 522              	.LASF14:
 523 0155 646F7562 		.ascii	"double\000"
 523      6C6500
ARM GAS  C:\Users\JOSHU_~1\AppData\Local\Temp\ccMz675k.s 			page 13


 524              	.LASF20:
 525 015c 6D6C7470 		.ascii	"mltplr\000"
 525      6C7200
 526              	.LASF25:
 527 0163 49544D5F 		.ascii	"ITM_RxBuffer\000"
 527      52784275 
 527      66666572 
 527      00
 528              	.LASF0:
 529 0170 7369676E 		.ascii	"signed char\000"
 529      65642063 
 529      68617200 
 530              	.LASF16:
 531 017c 6C6F6E67 		.ascii	"long double\000"
 531      20646F75 
 531      626C6500 
 532              	.LASF5:
 533 0188 5F5F696E 		.ascii	"__int32_t\000"
 533      7433325F 
 533      7400
 534              	.LASF11:
 535 0192 75696E74 		.ascii	"uint16_t\000"
 535      31365F74 
 535      00
 536              	.LASF13:
 537 019b 666C6F61 		.ascii	"float\000"
 537      7400
 538              	.LASF2:
 539 01a1 73686F72 		.ascii	"short int\000"
 539      7420696E 
 539      7400
 540              	.LASF4:
 541 01ab 5F5F7569 		.ascii	"__uint16_t\000"
 541      6E743136 
 541      5F7400
 542              	.LASF18:
 543 01b6 62756666 		.ascii	"buffer\000"
 543      657200
 544              	.LASF17:
 545 01bd 73697A65 		.ascii	"sizetype\000"
 545      74797065 
 545      00
 546              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
